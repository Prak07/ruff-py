name: Auto-Format Code

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  PYTHON_VERSION: "3.12"

jobs:
  auto-format:
    name: Auto-Format with Ruff
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-format-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-format-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        
    - name: Run Ruff auto-fixes
      run: |
        echo "Running Ruff linter with auto-fixes..."
        ruff check . --fix --unsafe-fixes --exit-zero
        
    - name: Run Ruff formatter
      run: |
        echo "Running Ruff formatter..."
        ruff format .
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Files that will be formatted:"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No formatting changes needed"
        fi
        
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "🔧 Auto-format: Apply Ruff formatting and linting fixes
        
        - Applied automatic code formatting with Ruff
        - Fixed import organization
        - Applied safe auto-fixes for code quality
        - Ensured consistent code style across the project
        
        Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
        git push
        
    - name: Comment on PR
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🔧 **Auto-formatting applied!**\n\nI\'ve automatically formatted your code using Ruff to ensure consistency with the project standards:\n\n- ✅ Code formatting\n- ✅ Import organization\n- ✅ Safe linting fixes\n\nThe changes have been committed to this PR. Please review the formatting changes and let me know if you have any questions!'
          })
          
    - name: Comment on PR if no changes
      if: steps.verify-changed-files.outputs.changed == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ **Code formatting looks good!**\n\nNo formatting changes were needed. Your code already follows the project standards.'
          })

  format-check:
    name: Formatting Validation
    runs-on: ubuntu-latest
    needs: auto-format
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Ruff
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        
    - name: Verify formatting
      run: |
        echo "Verifying code formatting..."
        ruff format --check .
        
    - name: Verify linting
      run: |
        echo "Verifying code linting..."
        ruff check .
        
    - name: Generate formatting report
      if: always()
      run: |
        echo "## Formatting Report" > format-report.md
        echo "" >> format-report.md
        echo "### Ruff Format Check" >> format-report.md
        if ruff format --check . > format-output.txt 2>&1; then
          echo "✅ All files are properly formatted" >> format-report.md
        else
          echo "❌ Some files need formatting:" >> format-report.md
          echo '```' >> format-report.md
          cat format-output.txt >> format-report.md
          echo '```' >> format-report.md
        fi
        echo "" >> format-report.md
        echo "### Ruff Lint Check" >> format-report.md
        if ruff check . > lint-output.txt 2>&1; then
          echo "✅ No linting issues found" >> format-report.md
        else
          echo "❌ Linting issues found:" >> format-report.md
          echo '```' >> format-report.md
          cat lint-output.txt >> format-report.md
          echo '```' >> format-report.md
        fi
        
    - name: Upload formatting report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: formatting-report
        path: format-report.md